apiVersion: v1
kind: ConfigMap
metadata:
  name: discourse
data:
  version: v1.8.0.beta1
  suffix: ""

  web.yml: |-
    templates:
      - "templates/web.template.yml"
      - "templates/web.ratelimited.template.yml"
      - "templates/cloudflare.template.yml"

    expose:
      - "10080:80"

    # any extra arguments for Docker?
    # docker_args:

    params:
      ## Which Git revision should this container use? (default: tests-passed)
      version: ${DISCOURSE_VERSION}

    env:
      LANG: en_US.UTF-8

      UNICORN_WORKERS: 4
      SIDEKIQ_WORKERS: 2

      DISCOURSE_HOSTNAME: forum.test.kazamatsuri.org

      DISCOURSE_DEVELOPER_EMAILS: uppfinnarn@gmail.com

      DISCOURSE_DB_NAME: ${DISCOURSE_KAZAMATSURI_DB_NAME}
      DISCOURSE_DB_USERNAME: ${DISCOURSE_KAZAMATSURI_DB_USERNAME}
      DISCOURSE_DB_PASSWORD: ${DISCOURSE_KAZAMATSURI_DB_PASSWORD}
      DISCOURSE_DB_HOST: postgresql.default.svc.cluster.local
      DISCOURSE_DB_SOCKET: ''
      DISCOURSE_DB_POOL: 50
      DISCOURSE_DB_TIMEOUT: 5000

      DISCOURSE_REDIS_HOST: redis.default.svc.cluster.local

      DISCOURSE_SMTP_ADDRESS: smtp.default.svc.cluster.local
      DISCOURSE_SMTP_PORT: 587
      DISCOURSE_SMTP_USER_NAME: ${DISCOURSE_SMTP_USERNAME}
      DISCOURSE_SMTP_PASSWORD: ${DISCOURSE_SMTP_PASSWORD}

      #DISCOURSE_CDN_URL: //discourse-cdn.example.com

    volumes:
      - volume:
          host: /srv/discourse/web
          guest: /shared
      - volume:
          host: /srv/discourse/web/log/var-log
          guest: /var/log

      # Bootstrapping on a machine that has uploads mounted over NFS will fail, as
      # the bootstrap script will attempt to `chown -R` it all... well, it doesn't
      # need a real uploads directory for this anyways.
      - volume:
          host: /tmp/bootstrap_discourse_uploads
          guest: /shared/uploads

    ## The docker manager plugin allows you to one-click upgrade Discouse
    ## http://discourse.example.com/admin/docker
    hooks:
      after_code:
        - exec:
            cd: $home/plugins
            cmd:
              # - git clone https://github.com/discourse/docker_manager.git
              - git clone https://github.com/discourse/discourse-spoiler-alert.git
              - git clone https://github.com/discourse/discourse-bbcode-color.git
              - git clone https://github.com/discourse/discourse-staff-notes.git
      before_bundle_exec:
        - file:
            path: $home/config/multisite.yml
            contents: |
              rokkenjima:
                adapter: postgresql
                database: ${DISCOURSE_ROKKENJIMA_DB_NAME}
                username: ${DISCOURSE_ROKKENJIMA_DB_USERNAME}
                password: ${DISCOURSE_ROKKENJIMA_DB_PASSWORD}
                host: postgresql.default.svc.cluster.local
                pool: 50
                timeout: 5000
                db_id: 1
                host_names:
                  - forum.test.rokkenjima.org
        - exec: cd /var/www/discourse && sudo -E -u discourse bundle install --deployment --verbose --without test --without development
        - exec: cd /var/www/discourse && sudo -E -u discourse bundle exec rake multisite:migrate

    ## Remember, this is YAML syntax - you can only have one block with a name
    run:
      - exec: echo "Beginning of custom commands"

      ## If you want to configure password login for root, uncomment and change:
      ## Use only one of the following lines:
      #- exec: /usr/sbin/usermod -p 'PASSWORD_HASH' root
      #- exec: /usr/sbin/usermod -p "$(mkpasswd -m sha-256 'RAW_PASSWORD')" root

      ## If you want to authorized additional users, uncomment and change:
      #- exec: ssh-import-id username
      #- exec: ssh-import-id anotherusername

      - exec: echo "End of custom commands"
      - exec: awk -F\# '{print $1;}' ~/.ssh/authorized_keys | awk 'BEGIN { print "Authorized SSH keys for this container:"; } NF>=2 {print $NF;}'
