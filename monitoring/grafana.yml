apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: http
    port: 80
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: Always
        env:
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_USERS_ALLOW_ORG_CREATE
          value: "false"
        - name: GF_USERS_AUTO_ASSIGN_ORG
          value: "true"
        - name: GF_DATABASE_TYPE
          value: postgres
        - name: GF_DATABASE_NAME
          value: grafana
        - name: GF_DATABASE_HOST
          value: postgresql.default.svc.cluster.local
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: grafana
              key: db.username
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana
              key: db.password
        - name: GF_SECURITY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: grafana
              key: secretkey
        - name: GF_SESSION_PROVIDER
          value: redis
        - name: GF_SESSION_PROVIDER_CONFIG
          value: 'addr=redis.default.svc.cluster.local:6379,prefix=grafana:'
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /login
            port: http
